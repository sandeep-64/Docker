Q: What is port binding in Docker?
A: Port binding is:
- A connection between your host machine's port and a container's port
- Allows external applications to communicate with containers
- Format: docker run -p [HOST_PORT]:[CONTAINER_PORT] [IMAGE]

Q: Can multiple containers use the same port internally?
A: Yes:
- Multiple containers can use the same internal port (e.g., 3000)
- BUT they must be bound to different host ports
- Example:
  ```
  Container 1: host:6000 -> container:6379
  Container 2: host:6001 -> container:6379
  ```

Q: What happens if you don't specify port binding?
A: Without port binding:
- The container will run but be unreachable from outside
- No external applications can connect to the container
- The container is effectively isolated

Q: How do you specify port binding when running a container?
A: Use the -p flag:
```
docker run -p 6000:6379 redis         Bind host port 6000 to container port 6379
docker run -d -p 6001:6379 redis:4.0  Run in detached mode with different port
```

Q: What error do you get when trying to use the same host port twice?
A: You'll get:
- "Port already allocated" error
- This happens because host ports must be unique
- Solution: Use a different host port for each container

Q: How can you check port bindings for running containers?
A: Use:
- docker ps command
- Shows all running containers
- Displays port mappings in the "PORTS" column
- Format shown as: 0.0.0.0:HOST_PORT->CONTAINER_PORT/tcp
